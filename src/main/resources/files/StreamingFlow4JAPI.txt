API SCOPE:

Obs.: All the API are exemplified using a Type event = "EventTest" with the followings attributes "id" and "measure".

API elements:

- ADD_EVENT add event type, every before specific rule
- RULECEP define addiction of a new rule
- RULE indicate an EPL(Esper Query Language) this QUERY should be added(EX.: select measure from EventTest.win:time(5 sec))
- QUEUE define destination queue of rule trigger
- EDIT_RULECEP define EDITION of a rule
- RULE_ID ID of rule to be Edited/Deleted
- DEL_RULE command to delete rule

obd.: In Event id is defined an Unique Identifier name

API Strucure:

a) Defining a context element entity for event types:

-- use the post for JSON endpoint: http://localhost:8080/rabbitmq/event/create
-- post method with Body:

{
"type" : "ADD_EVENT",
"id" : "EventTest",
"attributes" : [
{
"name"  : "id",
"type"  : "String",
"value" : "0"
},
{
"name" : "measure",
"type"  : "Double",
"value" : "0"
}
]
}

b) Creating context rules for event types:
-- post RabbitMQ endpoint: http://localhost:8080/rabbitmq/rule/create
-- post method with Body:
{
"type" : "RULECEP",
"id" : "Rule7",
"attributes" : [
{ "name"  : "RULE",   --Attribute for rule definition
"type"  : "String",
"value" : "select measure from EventTest.win:time(5 sec)"
},
{
"name"  : "QUEUE_1",
"type"  : "QUEUE",         --Attribute for destination queue of rule outcomes
"value" : "si.cep.queue"
}
]
}

c) Updating context rules for event types:

-- put RabbitMQ endpoint: http://localhost:8080/rabbitmq/rule/update
-- post method with Body:
{
"type" : "EDIT_RULECEP",
"id" : "Rule3",
"attributes" : [
{
"name"  : "RULE_ID",   --Obs.: rule id can be obtained in the logfile.
"type"  : "String",
"value" : "7083533ac2e0"
},
{
"name"  : "RULE",    --Attribute for rule update
"type"  : "String",
"value" : "select measure from EventTest.win:time(10 sec)"
},
{
"name"  : "QUEUE_1",
"type"  : "QUEUE",        --You can change destination queue or else keep the same
"value" : "si.cep.queue"
}
]
}

d) Delete a rule defined:

-- delete RabbitMQ endpoint: http://localhost:8080/rabbitmq/rule/delete
-- post method with Body:

{
"type" : "DEL_RULE",
"id" : "DelRule3",
"attributes" : [
{
"name"  : "RULE_ID",
"type"  : "String",
"value" : "59684e480327"
}
]
}

e) Scope of data producer:

-- post RabbitMQ endpoint: http://localhost:8080/rabbitmq/data/create
-- post method with Body:

{
"type" : "EventTest",
"id" : "1",
"attributes" : [
{
"name" : "measure",
"type" : "Double",
"value" : "2"
}
]
}
